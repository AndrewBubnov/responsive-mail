{"version":3,"sources":["actions/mails.js","actions/mailCreators.js","components/LetterType/LetterType.js","components/LetterDrawer/Letter/Letter.js","components/LetterDrawer/LetterDrawer.js","components/MailList/MailList.js","components/NewLetter/NewLetter.js","components/Search/Search.js","components/DrawerButton/DrawerButton.js","components/Drawer/Drawer.js","App.js","reducers/mails.js","reducers/index.js","store.js","index.js"],"names":["WRITE_LETTER","CHANGE_FOLDER","LETTER_FIELD_FILL","LETTER_LIST","LETTER_SHOWN","CURRENT_LETTER","TEXT_SHOW","SET_UNREAD","DRAWER_OPEN","SET_DELAY","CHECKBOXES_HANDLE","SET_SEARCH","GROUP_CHECK","MENU_TOGGLE","deleteLetter","emails","itemList","dispatch","mailList","active","checkboxesArray","type","payload","setDelay","newCurrentList","slice","filter","letter","some","element","id","setUnRead","_objectSpread2","newDeleted","forEach","item","checked","concat","Object","objectSpread","defineProperty","length","splice","indexOf","reverseMessage","to","subject","iconPress","answered","newLetterClose","fillElement","e","newLetter","target","name","value","newLetterSend","newReceived","received","map","newSubject","text","newObj","Date","now","status","from","sent","toConsumableArray","tempList","letterScroll","currentlyShown","unRead","currentList","index","findIndex","setTimeout","readLetter","drawerClose","mailListUpdated","inbox","delay","LetterType","_this","this","_this$props$emails","props","folders","folderList","classN","react_default","a","createElement","key","onClick","changeFolder","className","Component","connect","state","mails","folderId","Letter","receivedMessage","addressing","answer","react","onChange","LetterDrawer","handleTouch","start","touches","clientX","window","innerWidth","_this2","leftOffset","startTouch","onTouchStart","onTouchMove","web","native","items","letterIsShown","opacity","position","left","top","enter","leave","config","duration","show","div","style","LetterDrawer_Letter_Letter","MailList","drawerIsOpen","textShow","search","groupCheck","currentMailList","set","Set","includes","add","Array","substring","handleCheckboxes","onMouseEnter","letterTextShow","onMouseLeave","toString","split","join","drawerOffset","deleteLetterGroup","components_LetterDrawer_LetterDrawer","list","check","array","push","console","log","NewLetter","reSubject","undefined","reAddress","defaultValue","rows","cols","Search","handleSearch","placeholder","DrawerButton","buttonClicked","buttonToggle","setState","firstClass","secondClass","thirdClass","open","topMenuToggle","topMenuOpen","classArray","components_LetterType_LetterType","App","toLocaleUpperCase","components_DrawerButton_DrawerButton","components_Drawer_Drawer","writeLetter","writingLetter","components_NewLetter_NewLetter","components_Search_Search","components_MailList_MailList","initialState","deleted","arguments","action","rootReducer","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","apply","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.eff592a2.chunk.js","sourcesContent":["\r\nexport const WRITE_LETTER = 'WRITE_LETTER'\r\n\r\nexport const CHANGE_FOLDER = 'CHANGE_FOLDER'\r\n\r\nexport const LETTER_FIELD_FILL = 'LETTER_FIELD_FILL'\r\n\r\nexport const LETTER_LIST = 'LETTER_LIST'\r\n\r\nexport const LETTER_SHOWN = 'LETTER_SHOWN'\r\nexport const CURRENT_LETTER = 'CURRENT_LETTER'\r\n\r\nexport const TEXT_SHOW = 'TEXT_SHOW'\r\nexport const SET_UNREAD = 'SET_UNREAD'\r\nexport const DRAWER_OPEN = 'DRAWER_OPEN'\r\nexport const SET_DELAY = 'SET_DELAY'\r\nexport const CHECKBOXES_HANDLE = 'CHECKBOXES_HANDLE'\r\nexport const SET_SEARCH = 'SET_SEARCH'\r\nexport const GROUP_CHECK = 'GROUP_CHECK'\r\nexport const MENU_TOGGLE = 'MENU_TOGGLE'\r\n\r\n\r\n","import { WRITE_LETTER, CHANGE_FOLDER, LETTER_FIELD_FILL, LETTER_LIST, LETTER_SHOWN, CURRENT_LETTER,\r\n    TEXT_SHOW, SET_UNREAD, DRAWER_OPEN, SET_DELAY, CHECKBOXES_HANDLE, SET_SEARCH, GROUP_CHECK, MENU_TOGGLE } from './mails'\r\n//***********************\r\n\r\nexport const deleteLetter = (emails, itemList) => dispatch => {\r\n    const {mailList, active, checkboxesArray} = emails\r\n    dispatch({type: LETTER_SHOWN, payload: false})\r\n    dispatch(setDelay(500))\r\n    dispatch({type: DRAWER_OPEN, payload: false})\r\n    const newCurrentList = mailList[active].slice().filter(letter => !itemList.some(element => element.id === letter.id))\r\n    if (active === 'received'){\r\n        dispatch(setUnRead(newCurrentList))\r\n    }\r\n    if (active  !== 'deleted'){\r\n        let newDeleted = mailList['deleted'].slice()\r\n        itemList.forEach(item => item.checked = false)\r\n        newDeleted = newDeleted.concat(itemList)\r\n        dispatch({type: LETTER_LIST, payload: {...mailList, [active]: newCurrentList, 'deleted': newDeleted}})\r\n        dispatch({type: TEXT_SHOW, payload: 0})\r\n    } else{\r\n        dispatch({type: LETTER_LIST, payload: {...mailList, [active]: newCurrentList}})\r\n        dispatch({type: TEXT_SHOW, payload: 0})\r\n    }\r\n    if (itemList.length === 1 && checkboxesArray[active].some(element => element.id === itemList[0].id)){\r\n        checkboxesArray[active].splice(checkboxesArray[active].indexOf(itemList[0]), 1)\r\n        dispatch({type: CHECKBOXES_HANDLE, payload: checkboxesArray})\r\n    }\r\n    dispatch({type: GROUP_CHECK, payload: false})\r\n}\r\n//***********************\r\n\r\nexport const reverseMessage = (to, subject, id, iconPress) => dispatch => {\r\n    dispatch({type: LETTER_FIELD_FILL, payload: {to, subject: 'Re: ' + subject, id, answered: true}})\r\n    dispatch({type: WRITE_LETTER, payload: iconPress})\r\n}\r\n//************************\r\n\r\nexport const writeLetter = (letter) => dispatch => {\r\n    dispatch({type: WRITE_LETTER, payload: true})\r\n    dispatch({type: LETTER_FIELD_FILL, payload: {...letter, to: '', subject: '', id: '', text: ''}})\r\n}\r\n//*************************\r\n\r\nexport const newLetterClose = () => dispatch => {\r\n    dispatch({type: WRITE_LETTER, payload: false})\r\n}\r\n//**************************\r\n\r\nexport const changeFolder = (folderId) => dispatch => {\r\n    dispatch ({type: CHANGE_FOLDER, payload: folderId})\r\n    dispatch({type: MENU_TOGGLE, payload: false})\r\n}\r\n//***************************\r\n\r\nexport const fillElement = (e, newLetter) => dispatch => {\r\n    dispatch({type: LETTER_FIELD_FILL, payload:{...newLetter, [e.target.name]: e.target.value}})\r\n}\r\n//****************************\r\n\r\nexport const newLetterSend = (emails, newLetter) => dispatch => {\r\n    const letter = emails.newLetter\r\n    if (letter.answered) {\r\n        const newReceived = emails.mailList.received.map(item => {\r\n            if (item.id === letter.id) {\r\n                return item.answered = true;\r\n            }\r\n            return null;\r\n        })\r\n        dispatch({type: LETTER_LIST, payload: {...emails.mailList, 'received': newReceived}})\r\n    }\r\n    const newSubject = {to: letter.to, subject: letter.subject, text: letter.text}\r\n    const newObj ={id: Date.now(), status: true, checked: false, from: '', ...newSubject}\r\n    const sent = [...emails.mailList.sent, newObj]\r\n    let tempList = {...emails.mailList, sent}\r\n    dispatch({type: LETTER_LIST, payload: {...emails.mailList, sent}})\r\n    dispatch(letterScroll(emails, tempList, newLetter))\r\n}\r\n//******************************\r\n\r\nexport const letterScroll = (emails, mailList, newLetter) => dispatch => {\r\n    dispatch({type: LETTER_FIELD_FILL, payload: {...emails.newLetter, to: '', subject: '', id: '', text: ''}})\r\n    dispatch({type: WRITE_LETTER, payload: false})\r\n    dispatch({type: LETTER_SHOWN, payload: false})\r\n    if (!newLetter){\r\n        const { currentlyShown, active, unRead } = emails\r\n        const currentList = mailList[active]\r\n        const index = currentList.findIndex(item => item.id === currentlyShown.id)\r\n        if (index < currentList.length - 1){\r\n            setTimeout(() => dispatch(readLetter(currentList[index + 1], mailList, unRead)), 500)\r\n        } else {\r\n            dispatch(setDelay(500))\r\n            dispatch(drawerClose())\r\n        }\r\n    }\r\n}\r\n\r\n//******************************\r\n\r\nexport const readLetter = (item, mailList, unRead) => dispatch =>{\r\n    const id = item.id\r\n    let mailListUpdated = mailList['received'].map((item) => {\r\n        let newObj ={...item};\r\n        if (newObj.id === id) newObj.status = true\r\n        return newObj\r\n    });\r\n    dispatch({type: LETTER_LIST, payload: {...mailList, 'received': mailListUpdated}})\r\n    dispatch({type: CURRENT_LETTER, payload: item})\r\n    dispatch({type: DRAWER_OPEN, payload: true})\r\n    dispatch({type: LETTER_SHOWN, payload: true})\r\n    dispatch({type: LETTER_FIELD_FILL, payload:  {to: item.from, subject: 'Re: ' + item.subject, id: item.id, answered: true}})\r\n    dispatch(setDelay(0))\r\n    if (!item.status){\r\n    dispatch({type: SET_UNREAD, payload: unRead - 1})\r\n    }\r\n}\r\n//*******************************\r\n\r\nexport const drawerClose = () => dispatch => {\r\n    dispatch({type: DRAWER_OPEN, payload: false})\r\n}\r\n//*******************************\r\n\r\nexport const letterTextShow = (id) => dispatch => {\r\n    dispatch({type: TEXT_SHOW, payload: id})\r\n}\r\n//*******************************\r\n\r\nexport const setUnRead = (inbox) => dispatch => {\r\n    let unRead = inbox.filter(item => !item.status).length\r\n    dispatch({type: SET_UNREAD, payload: unRead})\r\n}\r\n//*******************************\r\n\r\nexport const setDelay = (delay) => dispatch => {\r\n    dispatch({type: SET_DELAY, payload: delay})\r\n}\r\n//*******************************\r\n\r\nexport const handleCheckboxes = (item, checkboxesArray,  mailList, active, check, e) => dispatch => {\r\n    const id = item.id\r\n    let mailListUpdated = mailList[active].map((item) => {\r\n        let newObj ={...item};\r\n        const array = checkboxesArray[active]\r\n        if (newObj.id === id) {\r\n            newObj.checked = !item.checked\r\n            e.target.checked ? array.push(item) : array.splice(array.findIndex(element => element.id === item.id), 1)\r\n        }\r\n        return newObj\r\n    });\r\n    console.log(checkboxesArray[active])\r\n    if (checkboxesArray[active].length < mailList[active].length){\r\n        dispatch({type: GROUP_CHECK, payload: false})\r\n    }\r\n    dispatch({type: LETTER_LIST, payload: {...mailList, [active]: mailListUpdated}})\r\n    dispatch({type: CHECKBOXES_HANDLE, payload: checkboxesArray})\r\n}\r\n//*******************************\r\n\r\nexport const deleteLetterGroup = (emails) => dispatch => {\r\n    const {checkboxesArray, active} = emails\r\n    dispatch(deleteLetter(emails, checkboxesArray[active]))\r\n    dispatch({type: CHECKBOXES_HANDLE, payload: {...checkboxesArray, [active]: []}})\r\n}\r\n//*******************************\r\n\r\nexport const handleSearch = (e) => dispatch => {\r\n    dispatch({type: SET_SEARCH, payload: e.target.value})\r\n}\r\n//*******************************\r\n\r\nexport const groupCheck = (mailList, active, checkboxesArray, check) => dispatch => {\r\n    let mailListUpdated = mailList[active].map(item => {\r\n        let newObj ={...item};\r\n        if (!newObj.checked) {\r\n            newObj.checked = true\r\n            checkboxesArray[active].push(item)\r\n        }\r\n        else if (newObj.checked && check){\r\n            newObj.checked = false\r\n            checkboxesArray[active].splice(checkboxesArray[active].findIndex(element => element.id === item.id), 1)\r\n        }\r\n        return newObj\r\n    })\r\n    dispatch({type: LETTER_LIST, payload: {...mailList, [active]: mailListUpdated}})\r\n    dispatch({type: CHECKBOXES_HANDLE, payload: checkboxesArray})\r\n    dispatch({type: GROUP_CHECK, payload: !check})\r\n\r\n}\r\n//********************************\r\n\r\nexport const topMenuToggle = (topMenuOpen) => dispatch => {\r\n    dispatch({type: MENU_TOGGLE, payload: !topMenuOpen})\r\n}\r\n//********************************\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './LetterType.css'\r\nimport {newLetterClose, reverseMessage, changeFolder} from \"../../actions/mailCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass LetterType extends Component {\r\n\r\n     render() {\r\n        const { folders, active, unRead } = this.props.emails\r\n        let folderList = folders.map( (item) => {\r\n            let classN = item.id === active ? \"active\" : \"regular\"\r\n            return (<li\r\n                key={item.id}\r\n                onClick={() => this.props.changeFolder(item.id)}\r\n                className={classN}>\r\n                <span className=\"folder-line\"><div className=\"folder-name\">{item.name}</div>\r\n                    <div className=\"unread-counter\">{item.id === 'received' && unRead > 0 && unRead}</div>\r\n                </span>\r\n            </li>)\r\n        })\r\n        return (\r\n                <ul className=\"folders\">\r\n                    {folderList}\r\n                </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        newLetterClose: () => dispatch(newLetterClose()),\r\n        reverseMessage: (from, subject, id, iconPress ) => dispatch(reverseMessage(from, subject, id, iconPress)),\r\n        changeFolder: ( id ) => dispatch(changeFolder(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LetterType);","import React, {Component, Fragment} from 'react'\r\nimport './Letter.css'\r\nimport {connect} from 'react-redux'\r\nimport { fillElement, newLetterSend, letterScroll} from '../../../actions/mailCreators'\r\n\r\n\r\nclass Letter extends Component{\r\n\r\n    render(){\r\n        const {newLetter, mailList, currentlyShown: letter} = this.props.emails\r\n        const receivedMessage = mailList['received'].some(item => item.id === letter.id)\r\n\r\n        let addressing = letter.from !== '' ? 'From' : 'To'\r\n        let answer = null;\r\n        if (addressing === 'From'){\r\n            answer =\r\n                <Fragment>\r\n                    <span className=\"service-line\">Answer this letter:</span>\r\n                    <textarea name=\"text\" onChange={(e) => this.props.fillElement(e, newLetter)} value={newLetter.text} className=\"answer-letter\">\r\n                </textarea>\r\n                    <button className=\"letter-buttons send-button\" onClick={() => {this.props.newLetterSend(this.props.emails, false)}}>Send</button>\r\n                </Fragment>\r\n        }\r\n\r\n        return (\r\n                <div className=\"letter\">\r\n                    <div className=\"letter-inner\">\r\n                        <div className=\"letter-title\">\r\n                            <span className=\"service-line\">{addressing}: </span>{letter.from || letter.to}\r\n                            {letter.answered && <div className=\"back-icon icon-answered\"> </div>}\r\n                        </div>\r\n                        <div className=\"letter-title\">\r\n                            <span className=\"service-line\">Subject: </span>{letter.subject}\r\n                        </div>\r\n                        <p className=\"incoming-letter\">{letter.text}</p>\r\n                        {answer}\r\n                        <button className={receivedMessage ? \"letter-buttons ignore-button\" : \"letter-buttons ignore-button ignore-only\"}\r\n                                onClick={() => {this.props.letterScroll(this.props.emails, mailList, false)}}>Ignore</button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fillElement: (e, newLetter) => dispatch(fillElement(e, newLetter)),\r\n        newLetterSend: (emails) => dispatch(newLetterSend(emails)),\r\n        letterScroll: (emails, mailList, newLetter) => dispatch(letterScroll(emails, mailList, newLetter))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Letter)","import React, {Component} from 'react'\r\nimport './Letter/Letter'\r\nimport {connect} from 'react-redux'\r\nimport Letter from \"./Letter/Letter\";\r\nimport {animated, Transition} from \"react-spring\";\r\nimport {drawerClose } from '../../actions/mailCreators'\r\nimport './LetterDrawer.css'\r\n\r\nclass LetterDrawer extends Component{\r\n    handleTouch = (start, e) => {\r\n        if (e.touches[0].clientX - start > window.innerWidth/3) this.props.drawerClose()\r\n    }\r\n\r\n    render(){\r\n        const leftOffset = window.innerWidth > 380 ? 5 : 0\r\n        let startTouch = 0\r\n        return (\r\n            <div className=\"drawer-box\"\r\n                 onTouchStart={(e) => {startTouch = e.touches[0].clientX}}\r\n                 onTouchMove={(e) => this.handleTouch(startTouch, e)}\r\n            >\r\n                <div className=\"drawer-box-header\">\r\n                    <div onClick={this.props.drawerClose} className=\"drawer-box-close\">&#10006;</div>\r\n                </div>\r\n                <div className=\"drawer-area\">\r\n            <Transition\r\n                native\r\n                items = {this.props.emails.letterIsShown}\r\n                from = {{opacity: 1, position: 'absolute', left: leftOffset + 'vw', top: '100vh'}}\r\n                enter = {{opacity: 1, position: 'absolute', left: leftOffset + 'vw', top: '5vh'}}\r\n                leave = {{opacity: 0, position: 'absolute', left: leftOffset + 'vw', top: '-100vh'}}\r\n                config = {{duration: 500}}\r\n            >\r\n                {show => show && (props =>(\r\n                    <animated.div style ={props}>\r\n                        <Letter/>\r\n                    </animated.div>\r\n                ))}\r\n            </Transition>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        drawerClose: () => dispatch(drawerClose()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LetterDrawer)","import React, {Component, Fragment} from 'react';\r\nimport {Transition, animated} from 'react-spring'\r\nimport './MailList.css'\r\nimport Drawer from \"../LetterDrawer/LetterDrawer\";\r\nimport {connect} from 'react-redux'\r\nimport { deleteLetter, reverseMessage, readLetter, letterTextShow, setUnRead, handleCheckboxes, deleteLetterGroup, groupCheck } from '../../actions/mailCreators'\r\n\r\n\r\n\r\nclass MailList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setUnRead(this.props.emails.mailList['received'])\r\n    }\r\nhandleTouch = (start, item, mailList, unRead, e) => {\r\n       if (e.touches[0].clientX - start > window.innerWidth/3) this.props.deleteLetter(this.props.emails, [item])\r\n       if (start - e.touches[0].clientX > window.innerWidth/3) this.props.readLetter(item, mailList, unRead)\r\n}\r\n\r\n    render(){\r\n        const { mailList, active, drawerIsOpen, textShow, unRead, checkboxesArray, search, groupCheck } = this.props.emails\r\n        let startTouch = 0\r\n        let currentMailList= null\r\n        if (mailList[active].length > 0){\r\n            const set = new Set(mailList[active].filter(element => element.from.includes(search)))\r\n            mailList[active].filter(element => element.subject.includes(search)).forEach(element => set.add(element))\r\n            mailList[active].filter(element => element.to.includes(search)).forEach(element => set.add(element))\r\n            currentMailList = Array.from(set).map((item) => {\r\n                let letter = item.from || item.to\r\n                letter = letter + ' - ' + item.subject\r\n                if (window.innerWidth < 380 && letter.length > 33){\r\n                    letter = letter.substring(0, 31) + '...'\r\n                }\r\n                const index = letter.indexOf(search)\r\n            return (<li key={item.id}>\r\n                    <div className=\"letter-wrapper\">\r\n\r\n                        {window.innerWidth > 380 && <input onChange={(e) => this.props.handleCheckboxes(item, checkboxesArray, mailList, active, groupCheck, e)}\r\n                                                           checked={item.checked} className=\"letter-checkbox\" type=\"checkbox\"/>}\r\n                        <div className=\"table-line\">\r\n                            <div className={item.status ? null : 'active-letter'}>\r\n                                <div className=\"letter-line\"\r\n                                     onTouchStart={(e) => {startTouch = e.touches[0].clientX}}\r\n                                     onTouchMove={(e) => this.handleTouch(startTouch, item, mailList, unRead, e)}\r\n                                     onMouseEnter={window.innerWidth > 380 ? () => this.props.letterTextShow(item.id) : null}\r\n                                     onMouseLeave={window.innerWidth > 380 ? () => this.props.letterTextShow(0) : null}>\r\n                                    {window.innerWidth > 380 && <div onClick={() => this.props.deleteLetter(this.props.emails, [item])} className=\"delete-letter-button\">\r\n                                    </div>}\r\n                                    {window.innerWidth > 380 && active === 'received' && <div className={item.answered ? \"back-icon icon-answered\" : \"back-icon\"}>\r\n                                    </div>}\r\n                                    <span className=\"date\">{new Date(item.id).toString().split(' ').splice(1,3).join('-')}</span>\r\n\r\n                                    {window.innerWidth > 380 ? <span onClick={() => this.props.readLetter(item, mailList, unRead)}\r\n                                          className={textShow === item.id ? \"letter-name name-blurred\" : \"letter-name\"} >\r\n                                        {index > 0 && <span>{letter.substring(0, index)}</span>}\r\n                                        <span className=\"marked\">{letter.substring(index, index + search.length)}</span>\r\n                                        <span>{letter.substring(index + search.length)}</span>\r\n                                        </span> : <span onClick={() => this.props.readLetter(item, mailList, unRead)} className=\"letter-name\">{letter}</span>}\r\n\r\n                                    {textShow === item.id && <span className=\"letter-text\">{item.text}</span>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>)\r\n            })}\r\n        else {\r\n            currentMailList = (\r\n                <li>\r\n                    <div className=\"no-letters\">No letters in this folder so far</div>\r\n                </li>\r\n            )}\r\n        const drawerOffset = window.innerWidth > 380 ? 50 : 0\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"mail-list\">\r\n\r\n                    {window.innerWidth > 380 && mailList[active].length > 0 && <button onClick={() => this.props.deleteLetterGroup(this.props.emails, checkboxesArray)}\r\n                                                            className={checkboxesArray[active].length > 0 ? \"delete-chosen chosen-active\" : \"delete-chosen\"}>Delete</button>}\r\n                    {window.innerWidth > 380 && mailList[active].length > 0 && <input onChange={() => this.props.groupCheck(mailList, active, checkboxesArray, groupCheck)} checked={groupCheck}\r\n                                                            className=\"letter-checkbox group-checkbox\" type=\"checkbox\"/>}\r\n\r\n                    <ul>\r\n                        {currentMailList}\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n                <Transition\r\n                    native\r\n                    items = {drawerIsOpen}\r\n                    from = {{position: 'absolute', left: '100vw', top: '0vh'}}\r\n                    enter = {{position: 'absolute', left: drawerOffset + 'vw', top: '0vh'}}\r\n                    leave = {{position: 'absolute', left: '100vw', top: '0vh'}}\r\n                    config = {{duration: 500, delay: this.props.emails.delay}}\r\n                >\r\n                    {show => show && (props =>(\r\n                        <animated.div style ={props}>\r\n                            <Drawer />\r\n                        </animated.div>\r\n                    ))}\r\n                </Transition>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteLetter: (emails, item) => dispatch(deleteLetter(emails, item)),\r\n        reverseMessage: (from, subject, id, iconPress ) => dispatch(reverseMessage(from, subject, id, iconPress)),\r\n        readLetter: (id, mailList, active) => dispatch(readLetter(id, mailList, active)),\r\n        letterTextShow: (id) => dispatch(letterTextShow(id)),\r\n        setUnRead: (list) => dispatch(setUnRead(list)),\r\n        handleCheckboxes: (item, checkboxesArray,  mailList, active, groupCheck, e) => dispatch(handleCheckboxes(item, checkboxesArray,  mailList, active, groupCheck, e)),\r\n        deleteLetterGroup: (emails, itemList) => dispatch(deleteLetterGroup(emails, itemList)),\r\n        groupCheck: (mailList, active, checkboxesArray, check) => dispatch(groupCheck(mailList, active, checkboxesArray, check)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MailList)","import React, {Component} from 'react';\r\nimport './NewLetter.css'\r\nimport {connect} from 'react-redux'\r\nimport { newLetterClose, fillElement, newLetterSend } from '../../actions/mailCreators'\r\n\r\nclass NewLetter extends Component{\r\n\r\n    render(){\r\n        const { newLetter } = this.props.emails\r\n        const reSubject = newLetter.subject ? newLetter.subject : undefined\r\n        const reAddress = newLetter.to ? newLetter.to : undefined\r\n        return(\r\n            <div className=\"new-letter\">\r\n                <div onClick={this.props.newLetterClose} className=\"new-letter-header\"><div className=\"new-letter-header-message\">New message</div>\r\n                    <div className=\"new-letter-close\">&#10006;</div>\r\n                </div>\r\n                <div className=\"new-letter-form\">\r\n                    <label ><div className=\"new-letter-form-align\">Address</div>\r\n                        <input onChange={(e) => this.props.fillElement(e, newLetter)} type=\"text\" name=\"to\" defaultValue={reAddress}/>\r\n                    </label>\r\n                    <label><div className=\"new-letter-form-align\">Theme</div>\r\n                        <input type=\"text\" onChange={(e) => this.props.fillElement(e, newLetter)} name=\"subject\" defaultValue={reSubject}/>\r\n                    </label>\r\n                    <textarea onChange={(e) => this.props.fillElement(e, newLetter)} name=\"text\" rows=\"20\" cols=\"50\">\r\n                    </textarea>\r\n                    <button onClick={() => this.props.newLetterSend(this.props.emails, true)}>Send</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        newLetterClose: () => dispatch(newLetterClose()),\r\n        fillElement: (e, newLetter) => dispatch(fillElement(e, newLetter)),\r\n        newLetterSend: (emails, newLetter) => dispatch(newLetterSend(emails, newLetter))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewLetter);","import React, {Component} from 'react'\r\nimport './Search.css'\r\nimport {connect} from 'react-redux'\r\nimport { handleSearch } from '../../actions/mailCreators'\r\n\r\n\r\nclass Search extends Component{\r\n\r\n    render(){\r\n\r\n\r\n        return (\r\n           <input className=\"search-input\"\r\n                  onChange={(e) => this.props.handleSearch(e)}\r\n                  value={this.props.emails.search}\r\n                  placeholder=\"Find letter\"\r\n           />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleSearch: (e) => dispatch(handleSearch(e)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)","import React, {Component} from 'react';\r\nimport './DrawerButton.css';\r\nimport {connect} from 'react-redux'\r\nimport { topMenuToggle } from \"../../actions/mailCreators\";\r\n\r\nclass DrawerButton extends Component{\r\n    state ={\r\n        buttonClicked: false,\r\n    };\r\n    buttonToggle = () => {\r\n        this.setState({buttonClicked: true})\r\n    };\r\nrender(){\r\n    let firstClass = \"\";\r\n    let secondClass = \"\";\r\n    let thirdClass = \"\";\r\n  if (this.state.buttonClicked){\r\n      if (this.props.open){\r\n          firstClass = 'hamburger first-in';\r\n          secondClass = 'hamburger second-in';\r\n          thirdClass = 'hamburger third-in';\r\n      } else {\r\n          firstClass = 'hamburger first-out';\r\n          secondClass = 'hamburger second-out';\r\n          thirdClass = 'hamburger third-out';\r\n      }\r\n  } else {\r\n          firstClass = 'hamburger first-start';\r\n          secondClass = 'hamburger';\r\n          thirdClass = 'hamburger third-start';\r\n  }\r\n    return (\r\n        <div onClick={() => {this.props.topMenuToggle(this.props.open); this.buttonToggle()}} className=\"hamburger-button\">\r\n            <div className={firstClass}>\r\n            </div>\r\n            <div className={secondClass}>\r\n            </div>\r\n            <div className={thirdClass}>\r\n            </div>\r\n        </div>\r\n    )\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.mails.topMenuOpen,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        topMenuToggle: (topMenuOpen) => dispatch(topMenuToggle(topMenuOpen)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerButton);\r\n\r\n\r\n","import React from 'react';\r\nimport './Drawer.css';\r\nimport LetterType from \"../LetterType/LetterType\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst Drawer = (props) => {\r\n    const classArray = props.open ? \"drawer open\" : \"drawer\";\r\n        return (\r\n            <div className={classArray}>\r\n             <LetterType/>\r\n            </div>\r\n        )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.mails.topMenuOpen,\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         writeLetter: (letter) => dispatch(writeLetter(letter)),\r\n//     }\r\n// }\r\nexport default connect(mapStateToProps, null)(Drawer);","import React, { Component, Fragment } from 'react';\r\nimport {Transition, animated} from 'react-spring'\r\nimport LetterType from './components/LetterType/LetterType'\r\nimport MailList from './components/MailList/MailList'\r\nimport NewLetter from \"./components/NewLetter/NewLetter\";\r\nimport Search from \"./components/Search/Search\";\r\nimport DrawerButton from \"./components/DrawerButton/DrawerButton\";\r\nimport './App.css';\r\nimport {connect} from 'react-redux'\r\nimport { writeLetter } from \"./actions/mailCreators\";\r\nimport Drawer from \"./components/Drawer/Drawer\";\r\n\r\n\r\nclass App extends Component {\r\n   render() {\r\n       const active = this.props.emails.active.substring(0,1).toLocaleUpperCase() + this.props.emails.active.substring(1)\r\n        return (\r\n            <Fragment>\r\n                {window.innerWidth <= 380 && <div className=\"header\">{active}</div>}\r\n                <DrawerButton/>\r\n                <Drawer/>\r\n                <button onClick={() => this.props.writeLetter(this.props.emails.newLetter, true)}\r\n                        className=\"new-message-button\">{window.innerWidth > 380 ? 'New letter' : '+'}</button>\r\n\r\n                <Transition\r\n                native\r\n                items = {this.props.emails.writingLetter}\r\n                from = {{opacity: 1, position: 'absolute', left: '0vw', top: '0vh'}}\r\n                enter = {{opacity: 1, position: 'absolute', left: '0vw', top: '15vh'}}\r\n                leave = {{opacity: 0, position: 'absolute', left: '0vw', top: '0vh'}}\r\n                >\r\n                    {show => show && (props =>(\r\n                        <animated.div style ={props}>\r\n                        <NewLetter />\r\n                        </animated.div>\r\n                    ))}\r\n                </Transition>\r\n\r\n                <div className=\"main-region\">\r\n\r\n                    {window.innerWidth > 380 && <LetterType />}\r\n                    <div className=\"list-wrapper\">\r\n                        {window.innerWidth > 380 && <Search/>}\r\n                    <MailList />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emails: state.mails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       writeLetter: (letter) => dispatch(writeLetter(letter)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { WRITE_LETTER, CHANGE_FOLDER, LETTER_FIELD_FILL, LETTER_LIST, LETTER_SHOWN, CURRENT_LETTER,\r\n    TEXT_SHOW, SET_UNREAD, DRAWER_OPEN, SET_DELAY, CHECKBOXES_HANDLE, SET_SEARCH, GROUP_CHECK, MENU_TOGGLE } from '../actions/mails'\r\n\r\nconst initialState = {\r\n    active: 'received',\r\n    mailList: {\r\n        received: [\r\n            {\r\n                id: 1513375200000,\r\n                status: false,\r\n                answered: false,\r\n                checked: false,\r\n                from: 'admin@reactjs.org',\r\n                to: '',\r\n                subject: 'Try React and send us reply!',\r\n                text: 'React - JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.' +\r\n                    'React разрабатывается и поддерживается Facebook, Instagram и сообществом отдельных разработчиков и корпораций.' +\r\n                    ' React может использоваться для разработки одностраничных и мобильных приложений. Его цель — предоставить высокую ' +\r\n                    'скорость, простоту и масштабируемость. В качестве библиотеки для разработки пользовательских интерфейсов React ' +\r\n                    'часто используется с другими библиотеками, такими как Redux.'\r\n            },\r\n            {\r\n                id: 1521324000000,\r\n                status: false,\r\n                answered: false,\r\n                checked: false,\r\n                from: 'admin@vuejs.org',\r\n                to: '',\r\n                subject: 'Try Vue!',\r\n                text:'Vue.js — JavaScript-фреймворк с открытым исходным кодом для создания пользовательских интерфейсов. ' +\r\n                    'Легко интегрируется в проекты с использованием других JavaScript-библиотек. Может функционировать' +\r\n                    ' как веб-фреймворк для разработки одностраничных приложений в реактивном стиле.'\r\n            },\r\n            {\r\n                id: 1469998800000,\r\n                status: false,\r\n                answered: false,\r\n                checked: false,\r\n                from: 'admin@angularjs.org',\r\n                to: '',\r\n                subject: 'Try Angular!',\r\n                text: 'AngularJS — JavaScript-фреймворк с открытым исходным кодом. Предназначен для разработки ' +\r\n                    'одностраничных приложений. Его цель — расширение браузерных приложений на основе MVC-шаблона' +\r\n                    ' а также упрощение тестирования и разработки. Фреймворк работает с HTML, содержащим дополнительные' +\r\n                    ' пользовательские атрибуты, которые описываются директивами, и связывает ввод или вывод области' +\r\n                    ' страницы с моделью, представляющей собой обычные переменные JavaScript. Значения этих переменных' +\r\n                    ' задаются вручную или извлекаются из статических или динамических JSON-данных.'\r\n\r\n            },\r\n        ],\r\n        sent: [\r\n            {\r\n                id: 1540850400000,\r\n                status: true,\r\n                answered: false,\r\n                checked: false,\r\n                from: '',\r\n                to: 'friend@ukr.net',\r\n                subject: 'Hello my friend',\r\n                text: 'A text (literary theory) is any object that can be read, including: Documents: Religious text, a writing that a religious tradition considers to be sacred; Textbook'\r\n            },\r\n            {\r\n                id: 1544911200000,\r\n                status: true,\r\n                answered: false,\r\n                checked: false,\r\n                from: '',\r\n                to: 'some@bigmir.net',\r\n                subject: 'Work proposition',\r\n                text: 'Функція TEXT дає змогу змінити спосіб відображення числа, застосувавши до нього форматування з кодами форматів. Це корисно, коли потрібно '\r\n            },\r\n        ],\r\n        deleted: []\r\n    },\r\n    writingLetter: false,\r\n    folders: [\r\n        {\r\n            name: 'Inbox',\r\n            id: 'received'\r\n        },\r\n        {\r\n            name: 'Outbox',\r\n            id: 'sent'\r\n        },\r\n        {\r\n            name: 'Deleted',\r\n            id: 'deleted'\r\n        }\r\n    ],\r\n    newLetter: {\r\n        to: '',\r\n        subject: '',\r\n        text: '',\r\n        id: '',\r\n        answered: false,\r\n    },\r\n    letterIsShown: false,\r\n    drawerIsOpen: false,\r\n    currentlyShown: {},\r\n    textShow: 0,\r\n    unRead: 0,\r\n    delay: 0,\r\n    checkboxesArray: {\r\n        received: [],\r\n        sent: [],\r\n        deleted: [],\r\n    },\r\n    search: '',\r\n    groupCheck: false,\r\n    topMenuOpen: false,\r\n\r\n}\r\n\r\nfunction mails (state = initialState, action) {\r\n    switch (action.type){\r\n        case WRITE_LETTER:\r\n            return {...state, writingLetter: action.payload}\r\n        case CHANGE_FOLDER:\r\n            return {...state, active: action.payload}\r\n        case LETTER_FIELD_FILL:\r\n            return {...state, newLetter: action.payload}\r\n        case DRAWER_OPEN:\r\n            return {...state, drawerIsOpen: action.payload}\r\n        case TEXT_SHOW:\r\n            return {...state, textShow: action.payload}\r\n        case SET_UNREAD:\r\n            return {...state, unRead: action.payload}\r\n        case LETTER_LIST:\r\n            return {...state, mailList: action.payload}\r\n        case LETTER_SHOWN:\r\n            return {...state, letterIsShown: action.payload}\r\n        case CURRENT_LETTER:\r\n            return {...state, currentlyShown: action.payload}\r\n        case SET_DELAY:\r\n            return {...state, delay: action.payload}\r\n        case CHECKBOXES_HANDLE:\r\n            return {...state, checkboxesArray: action.payload}\r\n        case SET_SEARCH:\r\n            return {...state, search: action.payload}\r\n        case GROUP_CHECK:\r\n            return {...state, groupCheck: action.payload}\r\n        case MENU_TOGGLE:\r\n            return {...state, topMenuOpen: action.payload}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default mails","import {combineReducers} from 'redux';\r\nimport mails from './mails';\r\n\r\nconst rootReducer = combineReducers({\r\n    mails\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers/index'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}